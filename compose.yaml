services:
  mysql:
    container_name: mysql
    image: mysql:8.4.6
    environment:
      MYSQL_ROOT_PASSWORD: dbpassword
      MYSQL_DATABASE: beerservice
    ports:
      - "3306:3306"
    expose:
      - "3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pdbpassword" ]
      interval: 10s
      timeout: 5s
      retries: 5
  
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.29
    ports:
      - 9200:9200
    environment:
      discovery.type: single-node
  
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.17.29
    ports:
      - 5601:5601
    restart: on-failure
    depends_on:
      - elasticsearch
  
  filebeat:
    container_name: filebeat
    image: docker.elastic.co/beats/filebeat:7.17.29
    volumes:
      - ./filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml # Remove :ro
      #- ./filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro # Configuration file
      - /var/lib/docker/containers:/var/lib/docker/containers:ro           # Docker logs
      - /var/run/docker.sock:/var/run/docker.sock:ro                       # Additional information about containers
    command: >
      /bin/bash -c "
      chmod 644 /usr/share/filebeat/filebeat.yml &&
      chown root:root /usr/share/filebeat/filebeat.yml &&
      filebeat -e --strict.perms=false
      "
    user: root                                                             # Allow access to log files and docker.sock
    restart: on-failure
    depends_on:
      - kibana
      - elasticsearch
  
  jms:
    container_name: jms
    image: apache/activemq-artemis:2.42.0
    environment:
      ARTEMIS_USER: artemis
      ARTEMIS_PASSWORD: simetraehcapa
    ports:
      - 8161:8161
      - 61616:61616
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8161" ]
      interval: 10s
      timeout: 5s
      retries: 5

  inventory-failover:
    container_name: inventory-failover
    image: domboeckli/kbe-brewery-inventory-failover:0.0.2-SNAPSHOT
    ports:
      - 8083:8083
    depends_on:
      mysql:
        condition: service_healthy
      jms:
        condition: service_healthy
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
  
  inventory-service:
    container_name: inventory-service
    image: domboeckli/kbe-brewery-inventory-micro-service:0.0.13-SNAPSHOT
    ports:
      - 8082:8082
    depends_on:
      inventory-failover:
        condition: service_started
      mysql:
        condition: service_healthy
      jms:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_HIKARI_JDBC_URL: jdbc:mysql://mysql:3306/beerservice?useUnicode=true&serverTimezone=UTC
      SPRING_DATASOURCE_HIKARI_USERNAME: root
      SPRING_DATASOURCE_HIKARI_PASSWORD: dbpassword

      SPRING_JPA_HIBERNATE_DDL-AUTO: update

      SPRING_ARTEMIS_USER: artemis
      SPRING_ARTEMIS_PASSWORD: simetraehcapa
      SPRING_ARTEMIS_BROKER_URL: tcp://jms:61616
    restart: on-failure
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
  
  beer-service:
    container_name: beer-service
    image: domboeckli/kbe-brewery-beer-micro-service:0.0.14-SNAPSHOT
    ports:
      - 8080:8080
    depends_on:
      inventory-service:
        condition: service_started
      mysql:
        condition: service_healthy
      jms:
        condition: service_healthy
    restart: on-failure
    environment:
      SPRING_DATASOURCE_HIKARI_JDBC_URL: jdbc:mysql://mysql:3306/beerservice?useUnicode=true&serverTimezone=UTC
      SPRING_DATASOURCE_HIKARI_USERNAME: root
      SPRING_DATASOURCE_HIKARI_PASSWORD: dbpassword

      SPRING_JPA_HIBERNATE_DDL-AUTO: update

      SPRING_ARTEMIS_USER: artemis
      SPRING_ARTEMIS_PASSWORD: simetraehcapa
      SPRING_ARTEMIS_BROKER_URL: tcp://jms:61616
      
      SFG_BREWERY_BEER-INVENTORY-SERVICE-HOST: http://inventory-service:8082
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
  
  order-service:
    container_name: order-service
    image: domboeckli/kbe-brewery-order-micro-service:0.0.13-SNAPSHOT
    ports:
      - 8081:8081
    depends_on:
      beer-service:
        condition: service_started
      mysql:
        condition: service_healthy
      jms:
        condition: service_healthy
    restart: on-failure
    environment:
      SPRING_DATASOURCE_HIKARI_JDBC_URL: jdbc:mysql://mysql:3306/beerservice?useUnicode=true&serverTimezone=UTC
      SPRING_DATASOURCE_HIKARI_USERNAME: root
      SPRING_DATASOURCE_HIKARI_PASSWORD: dbpassword

      SPRING_JPA_HIBERNATE_DDL-AUTO: update

      SPRING_ARTEMIS_USER: artemis
      SPRING_ARTEMIS_PASSWORD: simetraehcapa
      SPRING_ARTEMIS_BROKER_URL: tcp://jms:61616
      
      SFG_BREWERY_BEER-SERVICE-HOST: http://beer-service:8080
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
  
  busybox:
    image: busybox:1.37.0
    container_name: busybox
    depends_on:
      inventory-service:
        condition: service_started
        required: true
      inventory-failover:
        condition: service_started
        required: true
      beer-service:
        condition: service_started
        required: true
      order-service:
        condition: service_started
        required: true
    healthcheck:
      test: [ "CMD", "sh", "-c", "
              echo 'Checking BusyBox readiness...' &&
              test -f /bin/sh &&
              wget -qO- http://beer-service:8080/actuator/health/readiness | grep -q '\"status\":\"UP\"' &&
              wget -qO- http://order-service:8081/actuator/health/readiness | grep -q '\"status\":\"UP\"' &&
              wget -qO- http://inventory-service:8082/actuator/health/readiness | grep -q '\"status\":\"UP\"' &&
              wget -qO- http://inventory-failover:8083/actuator/health/readiness | grep -q '\"status\":\"UP\"'
            " ]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      /bin/sh -c '
      while true; do
        beer_service_health=$$(wget -q -O - http://beer-service:8080/actuator/health/readiness 2>/dev/null)
        order_service_health=$$(wget -q -O - http://order-service:8081/actuator/health/readiness 2>/dev/null)
        inventory_service_health=$$(wget -q -O - http://inventory-service:8082/actuator/health/readiness 2>/dev/null)
        inventory_failover_health=$$(wget -q -O - http://inventory-failover:8083/actuator/health/readiness 2>/dev/null)
      
        echo "{
          \"timestamp\": \"$$(date -Iseconds)\",
          \"services\": {
            \"beer-service\": $$beer_service_health,
            \"order-service\": $$order_service_health,
            \"inventory-service\": $$inventory_service_health,
            \"inventory-failover\": $$inventory_failover_health
          }
        }"
        sleep 15
      done
      '        














