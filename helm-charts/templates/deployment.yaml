apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "application-template.fullname" . }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "application-template.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "application-template.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "application-template.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: wait-for-mysql
          image: {{.Values.busyboxImage.repository }}:{{.Values.busyboxImage.tag }}
          imagePullPolicy: {{.Values.busyboxImage.pullPolicy }}
          command: [ 'sh', '-c', 'until nc -z {{ .Values.mysql.serviceFQDN  }} {{ .Values.mysql.port }}; do echo "[busybox: wait-for-mysql] waiting for mysql"; sleep 2; done; echo "[busybox: wait-for-mysql] mysql is available"' ]
        - name: wait-for-jms
          image: {{.Values.busyboxImage.repository }}:{{.Values.busyboxImage.tag }}
          imagePullPolicy: {{.Values.busyboxImage.pullPolicy }}
          command: [ 'sh', '-c', 'until nc -z {{ .Values.jms.serviceFQDN  }} {{ .Values.jms.broker.port }}; do echo "[busybox: wait-for-jms] waiting for jms"; sleep 2; done; echo "[busybox: wait-for-jms] jms is available"' ]
        - name: wait-for-inventory-service
          image: {{.Values.busyboxImage.repository }}:{{.Values.busyboxImage.tag }}
          imagePullPolicy: {{.Values.busyboxImage.pullPolicy }}
          command: [ 'sh', '-c', 'until nc -z {{ .Values.inventoryService.serviceFQDN  }} {{ .Values.inventoryService.port }}; do echo "[busybox: wait-for-inventory-service] waiting for inventory service"; sleep 2; done; echo "[busybox: wait-for-inventory-service] inventory service is available"' ]
        - name: wait-for-failover-service
          image: {{.Values.busyboxImage.repository }}:{{.Values.busyboxImage.tag }}
          imagePullPolicy: {{.Values.busyboxImage.pullPolicy }}
          command: [ 'sh', '-c', 'until nc -z {{ .Values.inventoryFailover.serviceFQDN  }} {{ .Values.inventoryFailover.port }}; do echo "[busybox: wait-for-failover-service] waiting for failover service"; sleep 2; done; echo "[busybox: wait-for-failover-service] failover service is available"' ]
        - name: wait-for-beer-service
          image: {{.Values.busyboxImage.repository }}:{{.Values.busyboxImage.tag }}
          imagePullPolicy: {{.Values.busyboxImage.pullPolicy }}
          command: [ 'sh', '-c', 'until nc -z {{ .Values.beerService.serviceFQDN  }} {{ .Values.beerService.port }}; do echo "[busybox: wait-for-beer-service] waiting for beer service"; sleep 2; done; echo "[busybox: wait-for-beer-service] beer service is available"' ]
        - name: wait-for-order-service
          image: {{.Values.busyboxImage.repository }}:{{.Values.busyboxImage.tag }}
          imagePullPolicy: {{.Values.busyboxImage.pullPolicy }}
          command: [ 'sh', '-c', 'until nc -z {{ .Values.orderService.serviceFQDN  }} {{ .Values.orderService.port }}; do echo "[busybox: wait-for-order-service] waiting for order service"; sleep 2; done; echo "[busybox: wait-for-order-service] order service is available"' ]

      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/@project.artifactId@:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: JAVA_TIMEZONE
              value: "{{ .Values.global.timezone }}"

            # ROUTE FOR beer-service
            - name: SPRING_CLOUD_GATEWAY_SERVER_WEBFLUX_ROUTES_0_ID
              value: "beer-service"
            - name: SPRING_CLOUD_GATEWAY_SERVER_WEBFLUX_ROUTES_0_URI
              value: "http://{{ .Values.beerService.serviceFQDN }}:{{ .Values.beerService.port }}"
            - name: SPRING_CLOUD_GATEWAY_SERVER_WEBFLUX_ROUTES_0_PREDICATES_0
              value: "Path=/api/v1/beer,/api/v1/beer/*,/api/v1/beerUpc/*"

            # ROUTE FOR inventory-service
            - name: SPRING_CLOUD_GATEWAY_SERVER_WEBFLUX_ROUTES_1_ID
              value: "inventory-service"
            - name: SPRING_CLOUD_GATEWAY_SERVER_WEBFLUX_ROUTES_1_URI
              value: "http://{{ .Values.inventoryService.serviceFQDN }}:{{ .Values.inventoryService.port }}"
            - name: SPRING_CLOUD_GATEWAY_SERVER_WEBFLUX_ROUTES_1_PREDICATES_0
              value: "Path=/api/v1/beer/*/inventory"

            # ROUTE FOR order-service
            - name: SPRING_CLOUD_GATEWAY_SERVER_WEBFLUX_ROUTES_2_ID
              value: "order-service"
            - name: SPRING_CLOUD_GATEWAY_SERVER_WEBFLUX_ROUTES_2_URI
              value: "http://{{ .Values.orderService.serviceFQDN }}:{{ .Values.orderService.port }}"
            - name: SPRING_CLOUD_GATEWAY_SERVER_WEBFLUX_ROUTES_2_PREDICATES_0
              value: "Path=/api/v1/customers/**"


          envFrom:
            - secretRef:
                name: {{ include "application-template.fullname" . }}-spring-secrets
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          startupProbe:
            httpGet:
              path: /actuator/health
              port: http
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          volumeMounts:
            - mountPath: "{{ .Values.global.timezonePath }}"
              name: time
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: time
          hostPath:
            path: {{ .Values.global.timezonePath }}
            type: ""
